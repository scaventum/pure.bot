html{font-size:16px}@media screen and (min-width:320px){html{font-size:calc(16px + 8 * ((100vw - 320px) / 880))}}@media screen and (min-width:1200px){html{font-size:24px}}h1{font-size:2.0736rem;font-size:33.1776px}@media screen and (min-width:320px){h1{font-size:calc(33.1776px + 47.8224 * ((100vw - 320px) / 880))}}@media screen and (min-width:1200px){h1{font-size:81px}}h2{font-size:1.728rem;font-size:27.648px}@media screen and (min-width:320px){h2{font-size:calc(27.648px + 26.352 * ((100vw - 320px) / 880))}}@media screen and (min-width:1200px){h2{font-size:54px}}h3{font-size:1.44rem;font-size:23.04px}@media screen and (min-width:320px){h3{font-size:calc(23.04px + 12.96 * ((100vw - 320px) / 880))}}@media screen and (min-width:1200px){h3{font-size:36px}}.container-center{height:100%;width:100%;display:flex;align-items:center;justify-content:center}#menu{font-family:Cute Font,cursive;margin-left:-150px;width:150px;position:fixed;top:0;left:0;bottom:0;z-index:2;background:#191818;overflow-y:auto;-webkit-overflow-scrolling:touch}#menu a{color:#999;border:none;padding:.6em 0 .6em .6em}#menu .pure-menu,#menu .pure-menu ul{border:none;background:transparent}#menu .pure-menu .menu-item-divided,#menu .pure-menu ul{border-top:1px solid #333}#menu .pure-menu .menu-item-divided li a:focus,#menu .pure-menu .menu-item-divided li a:hover,#menu .pure-menu ul li a:focus,#menu .pure-menu ul li a:hover{background:#333}#menu .pure-menu-heading,#menu .pure-menu-selected{text-transform:none}#menu .pure-menu-selected{background:#444}#menu .pure-menu-selected a{color:#fff}#menu .pure-menu-heading{background:#c60;font-size:110%;color:#fff;margin:0}.menu-link{position:fixed;display:block;top:0;left:0;background:#000;background:rgba(0,0,0,.7);font-size:10px;z-index:1;width:2em;height:auto;padding:2.1em 1.6em}.menu-link:focus,.menu-link:hover{background:#000}.menu-link span{position:relative;display:block}.menu-link span,.menu-link span:after,.menu-link span:before{background-color:#fff;width:100%;height:.2em}.menu-link span:after,.menu-link span:before{position:absolute;margin-top:-.6em;content:" "}.menu-link span:after{margin-top:.6em}@media (min-width:768px){#menu{left:150px}.menu-link{position:fixed;left:150px;display:none}}.content{margin:0 auto;padding:0 2em;max-width:800px;margin-bottom:50px;line-height:1.6em}.header{margin:0;color:#333;text-align:center;padding:2.5em 2em 0;border-bottom:1px solid #eee}.header h1{margin:.2em 0;font-weight:300}.header h2{color:#999;font-weight:300;padding:0;margin-top:0}.content-subhead{margin:50px 0 20px;font-weight:300;color:#333}@media (min-width:768px){.content,.header{padding-left:2em;padding-right:2em}}.jumbotron{width:calc(100% - 4rem);color:#333;text-align:center;padding:2rem}.jumbotron h1{margin:.2em 0;font-weight:300}.jumbotron h2{color:#999;font-weight:300;padding:0;margin-top:0}@media (max-width:767px){.jumbotron{width:calc(100% - 2rem);padding:1rem}}body,html{height:100%}body{color:#666;font-family:Roboto,sans-serif;font-weight:300}#main{height:100%;width:100%}h1,h2,h3,h4,h5{font-family:Cute Font,cursive}.pure-img-responsive{max-width:100%;height:auto}#layout,#menu,.menu-link{transition:all .2s ease-out}#layout{height:100%;position:relative;left:0;padding-left:0}#layout.active #menu{left:150px;width:150px}#layout.active .menu-link{left:150px}@media (min-width:768px){#layout{padding-left:150px;left:0}#layout.active .menu-link{left:150px}}@media (max-width:767px){#layout.active{position:relative;left:150px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
