"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,i){return e&&_defineProperties(t.prototype,e),i&&_defineProperties(t,i),t}var AttrHelper=function(){function t(){_classCallCheck(this,t)}return _createClass(t,[{key:"toggleClass",value:function(t,e){for(var i=t.className.split(/\s+/),n=i.length,a=0;a<n;a++)if(i[a]===e){i.splice(a,1);break}n===i.length&&i.push(e),t.className=i.join(" ")}},{key:"hasClass",value:function(t,e){return-1!==t.className.indexOf(e)}},{key:"removeElementsByClass",value:function(t){if(t.length>0)for(var e=t.length-1;e>=0;e--)t[e].parentNode.removeChild(t[e])}}]),t}(),PositionHelper=function(){function t(){_classCallCheck(this,t)}return _createClass(t,[{key:"isScrolledIntoView",value:function(t){var e=t.getBoundingClientRect(),i=e.top,n=e.bottom;return i<window.innerHeight&&n>=0}}]),t}(),Animations=function(){function t(){_classCallCheck(this,t),this.animations={},this.speed=100,this.position_helper=new PositionHelper}return _createClass(t,[{key:"init",value:function(){var t=this;this.animations=Array.prototype.slice.call(document.querySelectorAll("[data-animation]")),this.animations.forEach(function(e){t.position_helper.isScrolledIntoView(e)&&t.animate(e)}),window.addEventListener("scroll",function(e){t.animations.forEach(function(e){t.position_helper.isScrolledIntoView(e)&&t.animate(e)})})}},{key:"animate",value:function(t){var e=t.dataset.animation||t.getAttribute("animation"),i=t.dataset.animationSpeed||this.speed;i=isNaN(i)?this.speed:i,"function"==typeof this[e]&&this[e](t,i),this.removeAnimation(t)}},{key:"typewriter",value:function(t,e){var i=this,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=(n=0==n.length?t.innerHTML:n).length;t.innerHTML=a,a+=n.charAt(o),t.innerHTML=a+"<span class='typwriter__blink'>_</span>",o<s&&(o++,setTimeout(function(){i.typewriter(t,e,n,a,o)},e))}},{key:"removeAnimation",value:function(t){t.removeAttribute("data-animation"),this.animations=Array.prototype.slice.call(document.querySelectorAll("[data-animation]"))}}]),t}(),animations=new Animations,ChatBox=function(){function t(){_classCallCheck(this,t),this.attr_helper=new AttrHelper,this.chatbox="",this.container="",this.chatbox_form="",this.chatbox_list="",this.chatbox_message_box="",this.welcome="",this.initiated=!1}return _createClass(t,[{key:"init",value:function(){var t=this;this.chatbox=document.querySelector(".chat-box"),null!==this.chatbox&&(this.container=this.chatbox.parentNode,this.chatbox_form=this.chatbox.querySelector(".chat-box__form"),this.chatbox_list=this.chatbox.querySelector(".chat-box__list"),this.welcome=document.getElementsByClassName("welcome"),this.chatbox_message_box=this.chatbox_form.querySelector("#message"),this.chatbox_form.addEventListener("submit",function(e){e.preventDefault(),t.initiated||t.initiateContainer(),t.chat()}))}},{key:"initiateContainer",value:function(){this.initiated=!0,this.attr_helper.removeElementsByClass(this.welcome),this.attr_helper.hasClass(this.container,"h-100")||this.attr_helper.toggleClass(this.container,"h-100")}},{key:"chat",value:function(){var t=this,e=this.chatbox_message_box.value;this.chatbox_message_box.value="",this.insertBubble(e,"text","human");var i="",n=new FormData,a={driver:"web",userId:"1",message:e,attachment:null,interactive:!1,attachment_data:document.getElementById("attachment").files[0]};Object.keys(a).forEach(function(t){return n.append(t,a[t])}),axios.post("/api/botman",n).then(function(e){(e.data.messages||[]).forEach(function(e){i=e.text,t.insertBubble(i,"text","purebot")})}).catch(function(t){console.log(t)})}},{key:"insertBubble",value:function(t,e,i){var n=document.createElement("span"),a=document.createTextNode(t);n.appendChild(a),n.classList.add("chat-box__list__bubble"),n.classList.add("chat-box__list__bubble__"+i),this.chatbox_list.appendChild(n),this.chatbox_list.scrollTop=this.chatbox_list.scrollHeight,this.chatbox_message_box.focus()}}]),t}(),chatbox=new ChatBox,SideBar=function(){function t(){_classCallCheck(this,t),this.attr_helper=new AttrHelper}return _createClass(t,[{key:"init",value:function(){var t=this,e=document.getElementById("layout"),i=document.getElementById("menu"),n=document.getElementById("menuLink"),a=document.getElementById("main"),o=[e,i,n];n.onclick=function(e){t.toggleSideBar(e,o,"active")},a.onclick=function(e){t.attr_helper.hasClass(i,"active")&&t.toggleSideBar(e,o,"active")}}},{key:"toggleSideBar",value:function(t,e,i){var n=this;t.preventDefault(),e.forEach(function(t){n.attr_helper.toggleClass(t,i)})}}]),t}(),sideBar=new SideBar;sideBar.init(),animations.init(),chatbox.init(),AOS.init({offset:0,delay:50,duration:1e3,easing:"linear"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
