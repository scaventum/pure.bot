"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var AttrHelper=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"toggleClass",value:function(e,t){for(var n=e.className.split(/\s+/),i=n.length,a=0;a<i;a++)if(n[a]===t){n.splice(a,1);break}i===n.length&&n.push(t),e.className=n.join(" ")}},{key:"hasClass",value:function(e,t){return-1!==e.className.indexOf(t)}}]),e}(),PositionHelper=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"isScrolledIntoView",value:function(e){var t=e.getBoundingClientRect(),n=t.top,i=t.bottom;return n<window.innerHeight&&i>=0}}]),e}(),Animations=function(){function e(){_classCallCheck(this,e),this.animations={},this.speed=100,this.position_helper=new PositionHelper}return _createClass(e,[{key:"init",value:function(){var e=this;this.animations=Array.prototype.slice.call(document.querySelectorAll("[data-animation]")),this.animations.forEach(function(t){e.position_helper.isScrolledIntoView(t)&&e.animate(t)}),window.addEventListener("scroll",function(t){e.animations.forEach(function(t){e.position_helper.isScrolledIntoView(t)&&e.animate(t)})})}},{key:"animate",value:function(e){var t=e.dataset.animation,n=e.dataset.animationSpeed||this.speed;this[t](e,n),this.removeAnimation(e)}},{key:"typewriter",value:function(e,t){var n=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=(i=0==i.length?e.innerHTML:i).length;e.innerHTML=a,a+=i.charAt(o);var l=1e3/t>1?1e3/t:1;o%l>=0&&o%l<1e3/t/2&&o<r&&(e.innerHTML=a+" <span style='font-weight:900'>_</span>"),o<r&&(o++,setTimeout(function(){n.typewriter(e,t,i,a,o)},t))}},{key:"removeAnimation",value:function(e){e.removeAttribute("data-animation"),this.animations=Array.prototype.slice.call(document.querySelectorAll("[data-animation]"))}}]),e}(),SideBar=function(){function e(){_classCallCheck(this,e),this.attr_helper=new AttrHelper}return _createClass(e,[{key:"init",value:function(){var e=this,t=document.getElementById("layout"),n=document.getElementById("menu"),i=document.getElementById("menuLink"),a=document.getElementById("main"),o=[t,n,i];i.onclick=function(t){e.toggleSideBar(t,o,"active")},a.onclick=function(t){e.attr_helper.hasClass(n,"active")&&e.toggleSideBar(t,o,"active")}}},{key:"toggleSideBar",value:function(e,t,n){var i=this;e.preventDefault(),t.forEach(function(e){i.attr_helper.toggleClass(e,n)})}}]),e}(),sideBar=new SideBar;sideBar.init();var animations=new Animations;animations.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
