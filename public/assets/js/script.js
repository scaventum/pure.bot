"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var l=t[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var SideBar=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"init",value:function(){var e=this,t=(document.getElementById("layout"),document.getElementById("menu")),n=document.getElementById("menuLink"),l=document.getElementById("main");n.onclick=function(t){e.toggleAll(t)},l.onclick=function(n){-1!==t.className.indexOf("active")&&e.toggleAll(n)}}},{key:"toggleClass",value:function(e,t){for(var n=e.className.split(/\s+/),l=n.length,a=0;a<l;a++)if(n[a]===t){n.splice(a,1);break}l===n.length&&n.push(t),e.className=n.join(" ")}},{key:"toggleAll",value:function(e){e.preventDefault(),this.toggleClass(layout,"active"),this.toggleClass(menu,"active"),this.toggleClass(menuLink,"active")}}]),e}(),sideBar=new SideBar;sideBar.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyIsInNpZGViYXIuanMiXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiU2lkZUJhciIsInRoaXMiLCJ2YWx1ZSIsIl90aGlzIiwibWVudSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJtZW51TGluayIsImNvbnRlbnQiLCJvbmNsaWNrIiwiZSIsInRvZ2dsZUFsbCIsImNsYXNzTmFtZSIsImluZGV4T2YiLCJlbGVtZW50IiwiY2xhc3NlcyIsInNwbGl0Iiwic3BsaWNlIiwicHVzaCIsImpvaW4iLCJwcmV2ZW50RGVmYXVsdCIsInRvZ2dsZUNsYXNzIiwibGF5b3V0Iiwic2lkZUJhciIsImluaXQiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUEsU0FBU0EsZ0JBQWdCQyxFQUFVQyxHQUFlLEtBQU1ELGFBQW9CQyxHQUFnQixNQUFNLElBQUlDLFVBQVUscUNBRWhILFNBQVNDLGtCQUFrQkMsRUFBUUMsR0FBUyxJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSUQsRUFBTUUsT0FBUUQsSUFBSyxDQUFFLElBQUlFLEVBQWFILEVBQU1DLEdBQUlFLEVBQVdDLFdBQWFELEVBQVdDLGFBQWMsRUFBT0QsRUFBV0UsY0FBZSxFQUFVLFVBQVdGLElBQVlBLEVBQVdHLFVBQVcsR0FBTUMsT0FBT0MsZUFBZVQsRUFBUUksRUFBV00sSUFBS04sSUFFN1MsU0FBU08sYUFBYWQsRUFBYWUsRUFBWUMsR0FBbUosT0FBaElELEdBQVliLGtCQUFrQkYsRUFBWWlCLFVBQVdGLEdBQWlCQyxHQUFhZCxrQkFBa0JGLEVBQWFnQixHQUFxQmhCLEVBRXpNLElDUkFrQixRRFVBLFdBQ0UsU0FBU0EsSUFDUHBCLGdCQUFnQnFCLEtBQU1ELEdBdUR4QixPQXBEQUosYUFBYUksRUFBUyxDQUFDLENBQ3JCTCxJQUFLLE9BQ0xPLE1BQU8sV0NmWCxJQUFBQyxFQUFBRixLQUVBRyxHQURBQyxTQUFBQyxlQUFBLFVBQ0FELFNBQUFDLGVBQUEsU0FDQUMsRUFBQUYsU0FBQUMsZUFBQSxZQUNBRSxFQUFBSCxTQUFBQyxlQUFBLFFBRUFDLEVBQUFFLFFBQUEsU0FBQUMsR0FDQVAsRUFBQVEsVUFBQUQsSUFHQUYsRUFBQUMsUUFBQSxTQUFBQyxJQUNBLElBQUFOLEVBQUFRLFVBQUFDLFFBQUEsV0FDQVYsRUFBQVEsVUFBQUQsTURxQkssQ0FDRGYsSUFBSyxjQUNMTyxNQUFPLFNDbEJYWSxFQUFBRixHQUtBLElBSkEsSUFBQUcsRUFBQUQsRUFBQUYsVUFBQUksTUFBQSxPQUNBNUIsRUFBQTJCLEVBQUEzQixPQUNBRCxFQUFBLEVBRUFBLEVBQUFDLEVBQUFELElBQ0EsR0FBQTRCLEVBQUE1QixLQUFBeUIsRUFBQSxDQUNBRyxFQUFBRSxPQUFBOUIsRUFBQSxHQUNBLE1BSUFDLElBQUEyQixFQUFBM0IsUUFDQTJCLEVBQUFHLEtBQUFOLEdBR0FFLEVBQUFGLFVBQUFHLEVBQUFJLEtBQUEsT0RxQkssQ0FDRHhCLElBQUssWUFDTE8sTUFBTyxTQ3BCWFEsR0FHQUEsRUFBQVUsaUJBQ0FuQixLQUFBb0IsWUFBQUMsT0FIQSxVQUlBckIsS0FBQW9CLFlBQUFqQixLQUpBLFVBS0FILEtBQUFvQixZQUFBZCxTQUxBLGNENEJTUCxFQXpEVCxHQVBBdUIsUUFBQSxJQUFBdkIsUUFDQXVCLFFBQUFDIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vSW5jbHVkZSBKUyBmaWxlcyBmcm9tIGluY2x1ZGUgZm9sZGVyIGhlcmUgYW5kIHNvcnQgdGhlbSBhY2NvcmRpbmcgdG8gaXRzIGRlcGVuZGVuY2llc1xyXG5cclxuLy9DYWxsIHNpZGViYXIuanNcclxubGV0IHNpZGVCYXIgPSBuZXcgU2lkZUJhcigpXHJcbnNpZGVCYXIuaW5pdCgpOyAiLCJjbGFzcyBTaWRlQmFyIHtcclxuXHJcbiAgICBpbml0KCkge1xyXG4gICAgICAgIHZhciBsYXlvdXQgICA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsYXlvdXQnKSxcclxuICAgICAgICAgICAgbWVudSAgICAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudScpLFxyXG4gICAgICAgICAgICBtZW51TGluayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51TGluaycpLFxyXG4gICAgICAgICAgICBjb250ZW50ICA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJylcclxuXHJcbiAgICAgICAgbWVudUxpbmsub25jbGljayA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudG9nZ2xlQWxsKGUpO1xyXG4gICAgICAgIH07XHJcbiAgICBcclxuICAgICAgICBjb250ZW50Lm9uY2xpY2sgPSAoZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAobWVudS5jbGFzc05hbWUuaW5kZXhPZignYWN0aXZlJykgIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUFsbChlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgdG9nZ2xlQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKSB7XHJcbiAgICAgICAgdmFyIGNsYXNzZXMgPSBlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pLFxyXG4gICAgICAgICAgICBsZW5ndGggPSBjbGFzc2VzLmxlbmd0aCxcclxuICAgICAgICAgICAgaSA9IDA7XHJcblxyXG4gICAgICAgIGZvcig7IGkgPCBsZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgaWYgKGNsYXNzZXNbaV0gPT09IGNsYXNzTmFtZSkge1xyXG4gICAgICAgICAgICBjbGFzc2VzLnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFRoZSBjbGFzc05hbWUgaXMgbm90IGZvdW5kXHJcbiAgICAgICAgaWYgKGxlbmd0aCA9PT0gY2xhc3Nlcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKGNsYXNzTmFtZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBlbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzZXMuam9pbignICcpO1xyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZUFsbChlKSB7XHJcbiAgICAgICAgdmFyIGFjdGl2ZSA9ICdhY3RpdmUnO1xyXG5cclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVDbGFzcyhsYXlvdXQsIGFjdGl2ZSk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVDbGFzcyhtZW51LCBhY3RpdmUpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlQ2xhc3MobWVudUxpbmssIGFjdGl2ZSk7XHJcbiAgICB9XHJcbn1cclxuIl19
