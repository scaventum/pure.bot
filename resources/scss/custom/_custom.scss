body {
    color: $hex7-grey;
    font-family: 'Cute Font', cursive;
}

.pure-img-responsive {
    max-width: 100%;
    height: auto;
}

/*
Add transition to containers so they can push in and out.
*/
#layout,
#menu,
.menu-link {
    -webkit-transition: all $transition ease-out;
    -moz-transition: all $transition ease-out;
    -ms-transition: all $transition ease-out;
    -o-transition: all $transition ease-out;
    transition: all $transition ease-out;
}

/*
This is the parent `<div>` that contains the menu and the content area.
*/
#layout {
    position: relative;
    left: 0;
    padding-left: 0;
    &.active {
        #menu {
            left: 150px;
            width: 150px;
        }

        .menu-link {
            left: 150px;
        }
    }
}

/*
The content `<div>` is where all your content goes.
*/
.content {
    margin: 0 auto;
    padding: 0 2em;
    max-width: 800px;
    margin-bottom: 50px;
    line-height: 1.6em;
}

.header {
    margin: 0;
    color: $hex3-grey;
    text-align: center;
    padding: 2.5em 2em 0;
    border-bottom: 1px solid $e-grey;
    h1 {
        margin: 0.2em 0;
        font-size: 3em;
        font-weight: 300;
    }
    h2 {
        font-weight: 300;
        color: $c-grey;
        padding: 0;
        margin-top: 0;
    }
}

.content-subhead {
    margin: 50px 0 20px 0;
    font-weight: 300;
    color: $hex8-grey;
}

/*
The `#menu` `<div>` is the parent `<div>` that contains the `.pure-menu` that
appears on the left side of the page.
*/
#menu {
    margin-left: -150px; /* "#menu" width */
    width: 150px;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 1000; /* so the menu or its navicon stays above all content */
    background: $color-primary;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    
    /*
    All anchors inside the menu should be styled like this.
    */
    a {
        color: $hex9-grey;
        border: none;
        padding: 0.6em 0 0.6em 0.6em;
    }

    /*
    Remove all background/borders, since we are applying them to #menu.
    */
    .pure-menu,
    .pure-menu ul {
        border: none;
        background: transparent;
    }

    /*
    Add that light border to separate items into groups.
    */
    .pure-menu ul,
    .pure-menu .menu-item-divided {
        border-top: 1px solid $hex3-grey;
        /*
        Change color of the anchor links on hover/focus.
        */
        li a:hover,
        li a:focus {
            background: $hex3-grey;
        }
    }
        

    /*
    This styles the selected menu item `<li>`.
    */
    .pure-menu-selected,
    .pure-menu-heading {
        text-transform: none;
    }

    /*
    This styles a link within a selected menu item `<li>`.
    */
    .pure-menu-selected {
        background: $hex4-grey;
        a {
            color: $white;
        }
    }

    /*
    This styles the menu heading.
    */
    .pure-menu-heading {
        background: $color-secondary;
        font-size: 110%;
        color: $white;
        margin: 0;
    }
}

/* -- Dynamic Button For Responsive Menu -------------------------------------*/

/*
The button to open/close the Menu is custom-made and not part of Pure. Here's
how it works:
*/

/*
`.menu-link` represents the responsive menu toggle that shows/hides on
small screens.
*/
.menu-link {
    position: fixed;
    display: block; /* show this only on small screens */
    top: 0;
    left: 0; /* "#menu width" */
    background: $black;
    background: rgba($black,0.7);
    font-size: 10px; /* change this value to increase/decrease button size */
    z-index: 10;
    width: 2em;
    height: auto;
    padding: 2.1em 1.6em;

    &:hover,
    &:focus {
        background: $black;
    }

    span {
        position: relative;
        display: block;
    }

    span,
    span:before,
    span:after {
        background-color: $white;
        width: 100%;
        height: 0.2em;
    }

    span:before,
    span:after {
        position: absolute;
        margin-top: -0.6em;
        content: " ";
    }

    span:after {
        margin-top: 0.6em;
    }
}

/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: $sm) {

    .header,
    .content {
        padding-left: 2em;
        padding-right: 2em;
    }

    #layout {
        padding-left: 150px; /* left col width "#menu" */
        left: 0;
        &.active {
            .menu-link {
                left: 150px;
            }
        }
    }
    #menu {
        left: 150px;
    }

    .menu-link {
        position: fixed;
        left: 150px;
        display: none;
    }
}

@media (max-width: $sm-1) {
    /* Only apply this when the window is small. Otherwise, the following
    case results in extra padding on the left:
        * Make the window small.
        * Tap the menu to trigger the active state.
        * Make the window large again.
    */
    #layout.active {
        position: relative;
        left: 150px;
    }
}